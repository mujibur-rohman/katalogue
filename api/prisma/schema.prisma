// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Profile {
  id              Int      @id @default(autoincrement())
  profilePicture  String?  @db.VarChar(255)
  photoFilename   String?  @db.VarChar(255)
  bio             String?  @db.Text()
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @unique
}

model User {
  id         String      @db.VarChar(255) @unique
  email      String      @unique
  password   String?     @db.VarChar(255)
  name       String      @db.VarChar(255)
  provider   String      @db.VarChar(32)
  token      String?     @db.LongText()
  profile    Profile?
  attributes Attribute[]
  catalogues Catalogue[]
}

model Catalogue {
  id            String      @db.VarChar(255) @unique
  name          String      @db.VarChar(255)
  description   String?     @db.LongText()
  url           String      @db.VarChar(255)
  slug          String      @db.VarChar(255)
  visitCount    Int         @default(0)
  products      Product[]
  userId        String           
  User          User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Product {
   id           Int         @id @default(autoincrement())
   name         String      @db.VarChar(255)
   description  String      @db.LongText()
   price        String      @db.VarChar(64)
   photos       Photo[]
   thumbnail    Thumbnail[]
   catalogueId  String
   catalogue    Catalogue   @relation(fields: [catalogueId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Thumbnail {
  id           Int         @id @default(autoincrement())
  productId    Int?     
  product      Product?    @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  fileName     String      @db.VarChar(255)
  url          String      @db.VarChar(512)    
}

model Photo {
  id           Int         @id @default(autoincrement())
  productId    Int?     
  product      Product?    @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  fileName     String      @db.VarChar(255)
  url          String      @db.VarChar(512)    
}

model Attribute {
  id           Int              @id @default(autoincrement())
  name         String           @db.VarChar(64)
  item         AttributeItem[]
  userId       String           
  User         User             @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model AttributeRelation {
  id           Int         @id @default(autoincrement())
  productId    Int
  attributeId  Int
}
 
model AttributeItem {
  id           Int         @id @default(autoincrement())
  name         String      @db.VarChar(64)
  attributeId  Int         
  attribute    Attribute   @relation(fields: [attributeId], references: [id], onDelete: Cascade, onUpdate: Cascade)    
} 

model AttributeItemRelation {
  id           Int         @id @default(autoincrement())
  productId    Int
  attributeId  Int
}

 